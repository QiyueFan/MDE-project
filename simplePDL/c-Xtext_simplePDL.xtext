// automatically generated by Xtext
grammar mp.simplePDL.xtext.PDL with org.eclipse.xtext.common.Terminals

import "http://simplepdl" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Process returns Process:
	{Process}
	'Process'
	name=EString
	'{'
		('processElements' '{' processElements+=ProcessElement ( "," processElements+=ProcessElement)* '}' )?
	'}';

ProcessElement returns ProcessElement:
	ProcessElement_Impl | WorkDefinition | WorkSequence | Guidance | Resource | ResourceSequence;





ProcessElement_Impl returns ProcessElement:
	{ProcessElement}
	'ProcessElement'
	;

EString returns ecore::EString:
	STRING | ID;

WorkDefinition returns WorkDefinition:
	{WorkDefinition}
	'WorkDefinition'
	name=EString
	'{'
		('linksToPredecessors' '(' linksToPredecessors+=[WorkSequence|EString] ( "," linksToPredecessors+=[WorkSequence|EString])* ')' )?
		('linksToSuccessors' '(' linksToSuccessors+=[WorkSequence|EString] ( "," linksToSuccessors+=[WorkSequence|EString])* ')' )?
		('resourcesequence' '(' resourcesequence+=[ResourceSequence|EString] ( "," resourcesequence+=[ResourceSequence|EString])* ')' )?
	'}';

WorkSequence returns WorkSequence:
	'WorkSequence'
	'{'
		'linkType' linkType=WorkSequenceType
		'predecessor' predecessor=[WorkDefinition|EString]
		'successor' successor=[WorkDefinition|EString]
	'}';

Guidance returns Guidance:
	'Guidance'
	'{'
		'text' text=EString
		('elements' '(' elements+=[ProcessElement|EString] ( "," elements+=[ProcessElement|EString])* ')' )?
	'}';

Resource returns Resource:
	{Resource}
	'Resource'
	'{'
		('resourcetype' resourcetype=resourceType)?
		('num' num=EInt)?
	'}';

ResourceSequence returns ResourceSequence:
	'ResourceSequence'
	'{'
		('weight' weight=EInt)?
		('workdefinition' workdefinition=[WorkDefinition|EString])?
		'resource' resource=[Resource|EString]
	'}';

enum WorkSequenceType returns WorkSequenceType:
				startToStart = 'startToStart' | finishToStart = 'finishToStart' | startToFinish = 'startToFinish' | finishToFinish = 'finishToFinish';

enum resourceType returns resourceType:
				concepteur = 'concepteur' | developpeur = 'developpeur' | machine = 'machine' | redacteur = 'redacteur' | testeur = 'testeur';

EInt returns ecore::EInt:
	'-'? INT;
